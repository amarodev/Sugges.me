<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Generic.UI" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Converters="using:Generic.UI.Converters" xmlns:Common="using:Generic.UI.Common" xmlns:ViewModels="using:Generic.UI.Logic.ViewModels" mc:Ignorable="d">
	<Converters:NullToVisibilityConverter x:Key="nullToVisibilityConverter"/>
	<Converters:DateConverter x:Key="dateConverter"/>
	<Style x:Key="SuggesFlyoutBackButtonStyle" TargetType="Button">
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="Width" Value="48"/>
		<Setter Property="Height" Value="48"/>
		<Setter Property="Margin" Value="36,0,36,36"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
		<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontSize" Value="56"/>
		<Setter Property="AutomationProperties.AutomationId" Value="BackButton"/>
		<Setter Property="AutomationProperties.Name" Value="Back"/>
		<Setter Property="AutomationProperties.ItemType" Value="Navigation Button"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="RootGrid">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation
											Storyboard.TargetName="ArrowGlyph"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0"/>
										<DoubleAnimation
											Storyboard.TargetName="NormalGlyph"
											Storyboard.TargetProperty="Opacity"
											To="0"
											Duration="0"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground)" Storyboard.TargetName="ArrowGlyph">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="FocusVisualWhite"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0"/>
										<DoubleAnimation
											Storyboard.TargetName="FocusVisualBlack"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid Margin="-1,-8,0,0">
							<TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" Foreground="{StaticResource BackButtonBackgroundThemeBrush}" FontSize="36"/>
							<TextBlock x:Name="NormalGlyph" Text="{StaticResource BackButtonGlyph}" Foreground="{StaticResource BackButtonForegroundThemeBrush}" FontSize="36"/>
							<TextBlock x:Name="ArrowGlyph" Text="&#xE0A6;" Foreground="{StaticResource BackButtonPressedForegroundThemeBrush}" Opacity="0" FontSize="36"/>
						</Grid>
						<Rectangle
							x:Name="FocusVisualWhite"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="1.5"/>
						<Rectangle
							x:Name="FocusVisualBlack"
							IsHitTestVisible="False"
							Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="0.5"/>

					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <DataTemplate x:Key="SuggesGroupedItemGridView_ItemsGenerated">
		<Grid HorizontalAlignment="Left" Width="300" Height="220">
			<Border Background="{StaticResource SuggesLightShadowsBackgroundColor}">
				<Image Source="{Binding LocalPathImage}" Stretch="UniformToFill" AutomationProperties.Name="{Binding Title}"/>
			</Border>
			<StackPanel VerticalAlignment="Bottom" Background="#B2554402">
				<TextBlock Text="{Binding Title}" Foreground="{StaticResource SuggesTitleForegroundColor}" Style="{StaticResource TitleTextStyle}" Height="25" Margin="15,0,15,0" MaxHeight="50" LineStackingStrategy="BlockLineHeight" TextTrimming="WordEllipsis"/>
				<TextBlock Text="{Binding Description}" Foreground="{StaticResource SuggesDescriptionForegroundColor}" Style="{StaticResource SubtitleTextStyle}" TextWrapping="Wrap" Margin="15,0" MaxHeight="20" FontSize="{StaticResource TripDescriptionFontSize}" TextTrimming="WordEllipsis" LineStackingStrategy="MaxHeight"/>
				<TextBlock Text="{Binding StartDate, Converter={StaticResource dateConverter}}" Foreground="{StaticResource SuggesSecondaryDescriptionForegroundColor}" Style="{StaticResource SubtitleTextStyle}" TextWrapping="Wrap" Margin="15,0,15,15" MaxHeight="20" FontSize="{StaticResource TripDescriptionFontSize}" TextTrimming="None" LineStackingStrategy="MaxHeight"/>
			</StackPanel>
		</Grid>
	</DataTemplate>
	<DataTemplate x:Key="SuggesGroupedItemListView_ItemsGenerated">
		<Grid Margin="6" Width="300">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Border Background="{StaticResource SuggesLightShadowsBackgroundColor}" Width="80" Height="60">
				<Image Source="{Binding LocalPathImage}" Stretch="UniformToFill"/>
			</Border>
			<StackPanel Grid.Column="1" Margin="10,-5,0,0">
				<TextBlock Text="{Binding Title}" Style="{StaticResource CaptionTextStyle}" TextWrapping="Wrap" Foreground="{StaticResource SuggesGroupTitleForegroundColor}" LineStackingStrategy="MaxHeight" MaxHeight="20" FontSize="14.667"/>
				<TextBlock Text="{Binding Description}" Style="{StaticResource CaptionTextStyle}" TextWrapping="Wrap" Foreground="{StaticResource SuggesSecondaryDescriptionForegroundColor}" LineStackingStrategy="MaxHeight" MaxHeight="20" />
				<TextBlock Text="{Binding StartDate, Converter={StaticResource dateConverter}}" Style="{StaticResource CaptionTextStyle}" TextWrapping="Wrap" Foreground="{StaticResource SuggesFlyoutBackgroundColor}" LineStackingStrategy="MaxHeight" MaxHeight="20" TextTrimming="None"/>
			</StackPanel>
		</Grid>
	</DataTemplate>
    <Style x:Key="SuggesComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Padding" Value="8,0"/>
        <Setter Property="Foreground" Value="{StaticResource ComboBoxForegroundThemeBrush}"/>
        <Setter Property="Background" Value="{StaticResource ComboBoxBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderThemeBrush}"/>
        <Setter Property="BorderThickness" Value="{StaticResource ComboBoxBorderThemeThickness}"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <CarouselPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="32"/>
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPointerOverBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxSelectedPointerOverBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBackground"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxArrowPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBackgroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledBorderThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="DropDownGlyph">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxArrowDisabledForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Highlight"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxFocusedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="FocusedPressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedForegroundThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="Highlight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ComboBoxPressedHighlightThemeBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DropDownStates">
                                <VisualState x:Name="Opened">
                                    <Storyboard>
                                        <SplitOpenThemeAnimation ClosedTargetName="ContentPresenter" ContentTranslationOffset="0" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <SplitCloseThemeAnimation ClosedTargetName="ContentPresenter" ContentTranslationOffset="40" ContentTranslationDirection="{Binding TemplateSettings.SelectedItemDirection, RelativeSource={RelativeSource Mode=TemplatedParent}}" ContentTargetName="ScrollViewer" ClosedLength="{Binding TemplateSettings.DropDownClosedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" OffsetFromCenter="{Binding TemplateSettings.DropDownOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" OpenedTargetName="PopupBorder" OpenedLength="{Binding TemplateSettings.DropDownOpenedHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2"/>
                        <Rectangle x:Name="PressedBackground" Fill="{StaticResource ComboBoxPressedHighlightThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0"/>
                        <Border x:Name="HighlightBackground" BorderBrush="{StaticResource ComboBoxFocusedBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ComboBoxFocusedBackgroundThemeBrush}" Grid.ColumnSpan="2" Opacity="0"/>
                        <Rectangle x:Name="Highlight" Fill="{StaticResource ComboBoxSelectedBackgroundThemeBrush}" Margin="{TemplateBinding BorderThickness}" Opacity="0"/>
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <TextBlock x:Name="DropDownGlyph" Grid.Column="1" Foreground="{StaticResource ComboBoxArrowForegroundThemeBrush}" FontWeight="Bold" FontSize="{StaticResource ComboBoxArrowThemeFontSize}" FontFamily="{StaticResource SymbolThemeFontFamily}" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="0,0,6,4" Text="&#xE011;" VerticalAlignment="Center"/>
                        <Popup x:Name="Popup">
                            <Border x:Name="PopupBorder" BorderBrush="{StaticResource ComboBoxPopupBorderThemeBrush}" BorderThickness="{StaticResource ComboBoxPopupBorderThemeThickness}" Background="{StaticResource ComboBoxPopupBackgroundThemeBrush}" HorizontalAlignment="Stretch">
                                <ScrollViewer x:Name="ScrollViewer" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" Foreground="{StaticResource ComboBoxPopupForegroundThemeBrush}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" VerticalSnapPointsType="OptionalSingle" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalSnapPointsAlignment="Near" ZoomMode="Disabled">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SuggesAddAppBarButtonStyle" TargetType="Button">
    	<Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
    	<Setter Property="VerticalAlignment" Value="Stretch"/>
    	<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
    	<Setter Property="FontWeight" Value="Normal"/>
    	<Setter Property="FontSize" Value="20"/>
    	<Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="Button">
    				<Grid x:Name="RootGrid" Width="100" Background="Transparent">

    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="ApplicationViewStates">
    							<VisualState x:Name="FullScreenLandscape"/>
    							<VisualState x:Name="Filled"/>
    							<VisualState x:Name="FullScreenPortrait">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Snapped">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="PointerOver">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TextLabel">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ColorAnimation Duration="0" To="#33FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Fill" d:IsOptimized="True"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path1">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path1">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="Stroke">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Focused">
    								<Storyboard>
    									<DoubleAnimation
    										Storyboard.TargetName="FocusVisualWhite"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    									<DoubleAnimation
    										Storyboard.TargetName="FocusVisualBlack"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unfocused" />
    							<VisualState x:Name="PointerFocused" />
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CheckStates">
    							<VisualState x:Name="Checked">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unchecked"/>
    							<VisualState x:Name="Indeterminate"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
    						<Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
							    <Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" x:Name="pressed" Visibility="Collapsed">
									<Grid>
									<Grid x:Name="backgroundGrid" Width="48" Height="48" Visibility="Visible">
										<Ellipse Fill="#FFFFFFFF" x:Name="Fill" Visibility="Visible" />
									</Grid>
									<Path x:Name="path1" Data="M19.833,0L32.5,0 32.5,19.833999 52.334,19.833999 52.334,32.500999 32.5,32.500999 32.5,52.333 19.833,52.333 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999z" Stretch="Uniform" Fill="#FF000000" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
										<Path.RenderTransform>
										<TransformGroup>
											<RotateTransform Angle="0" />
											<ScaleTransform ScaleX="1" ScaleY="1" />
										</TransformGroup>
										</Path.RenderTransform>
									</Path>
									</Grid>
								</Viewbox>
								<Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" x:Name="normal">
								  <Grid>
									<Grid x:Name="backgroundGridNormal" Width="48" Height="48" Visibility="Visible">
									  <Path Data="M50.5,4.7500001C25.232973,4.75 4.75,25.232973 4.7500001,50.5 4.75,75.767029 25.232973,96.25 50.5,96.25 75.767029,96.25 96.25,75.767029 96.25,50.5 96.25,25.232973 75.767029,4.75 50.5,4.7500001z M50.5,0C78.390381,0 101,22.609621 101,50.5 101,78.390381 78.390381,101 50.5,101 22.609621,101 0,78.390381 0,50.5 0,22.609621 22.609621,0 50.5,0z" Stretch="Fill" Fill="#FFFFFFFF" x:Name="Stroke" Visibility="Visible" />
									</Grid>
									<Path x:Name="path" Data="M19.833,0L32.5,0 32.5,19.833999 52.334,19.833999 52.334,32.500999 32.5,32.500999 32.5,52.333 19.833,52.333 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999z" Stretch="Uniform" Fill="#FFFFFFFF" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
									  <Path.RenderTransform>
										<TransformGroup>
											<RotateTransform Angle="0" />
											<ScaleTransform ScaleX="1" ScaleY="1" />
										</TransformGroup>
									  </Path.RenderTransform>
									</Path>
								  </Grid>
								</Viewbox>
							</Grid>
    						<TextBlock
    							x:Name="TextLabel"
    							Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
    							Margin="0,0,2,0"
    							FontSize="12"
    							TextAlignment="Center"
    							Width="88"
    							MaxHeight="32"
    							TextTrimming="WordEllipsis"
    							Style="{StaticResource BasicTextStyle}" Text="{TemplateBinding Content}"/>
    					</StackPanel>
    					<Rectangle
    						x:Name="FocusVisualWhite"
    						IsHitTestVisible="False"
    						Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
    						StrokeEndLineCap="Square"
    						StrokeDashArray="1,1"
    						Opacity="0"
    						StrokeDashOffset="1.5"/>
    					<Rectangle
    						x:Name="FocusVisualBlack"
    						IsHitTestVisible="False"
    						Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
    						StrokeEndLineCap="Square"
    						StrokeDashArray="1,1"
    						Opacity="0"
    						StrokeDashOffset="0.5"/>

    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="SuggesDeleteAppBarButtonStyle" TargetType="Button">
    	<Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
    	<Setter Property="VerticalAlignment" Value="Stretch"/>
    	<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
    	<Setter Property="FontWeight" Value="Normal"/>
    	<Setter Property="FontSize" Value="20"/>
    	<Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="Button">
    				<Grid x:Name="RootGrid" Width="100" Background="Transparent">

    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="ApplicationViewStates">
    							<VisualState x:Name="FullScreenLandscape"/>
    							<VisualState x:Name="Filled"/>
    							<VisualState x:Name="FullScreenPortrait">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Snapped">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="PointerOver">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TextLabel">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ColorAnimation Duration="0" To="#33FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Fill" d:IsOptimized="True"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path1">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path1">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="Stroke">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Focused">
    								<Storyboard>
    									<DoubleAnimation
    										Storyboard.TargetName="FocusVisualWhite"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    									<DoubleAnimation
    										Storyboard.TargetName="FocusVisualBlack"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unfocused" />
    							<VisualState x:Name="PointerFocused" />
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CheckStates">
    							<VisualState x:Name="Checked">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unchecked"/>
    							<VisualState x:Name="Indeterminate"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
    						<Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
    							<Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" x:Name="pressed" Visibility="Collapsed">
    								<Grid>
    									<Grid x:Name="backgroundGrid" Width="48" Height="48" Visibility="Visible">
    										<Ellipse Fill="#FFFFFFFF" x:Name="Fill" Visibility="Visible" />
    									</Grid>
    									<Path x:Name="path1" Data="M33.977998,27.684L33.977998,58.102997 41.373998,58.102997 41.373998,27.684z M14.841999,27.684L14.841999,58.102997 22.237998,58.102997 22.237998,27.684z M4.0319996,22.433001L52.183,22.433001 52.183,63.999001 4.0319996,63.999001z M15.974,0L40.195001,0 40.195001,7.7260003 56.167001,7.7260003 56.167001,16.000999 0,16.000999 0,7.7260003 15.974,7.7260003z" Stretch="Uniform" Fill="#FFFFFFFF" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
										  <Path.RenderTransform>
											<TransformGroup>
												<RotateTransform Angle="0" />
												<ScaleTransform ScaleX="1" ScaleY="1" />
											</TransformGroup>
										  </Path.RenderTransform>
										</Path>
    								</Grid>
    							</Viewbox>
    							<Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" x:Name="normal">
    								<Grid>
    									<Grid x:Name="backgroundGridNormal" Width="48" Height="48" Visibility="Visible">
    										<Path Data="M50.5,4.7500001C25.232973,4.75 4.75,25.232973 4.7500001,50.5 4.75,75.767029 25.232973,96.25 50.5,96.25 75.767029,96.25 96.25,75.767029 96.25,50.5 96.25,25.232973 75.767029,4.75 50.5,4.7500001z M50.5,0C78.390381,0 101,22.609621 101,50.5 101,78.390381 78.390381,101 50.5,101 22.609621,101 0,78.390381 0,50.5 0,22.609621 22.609621,0 50.5,0z" Stretch="Fill" Fill="#FFFFFFFF" x:Name="Stroke" Visibility="Visible" />
    									</Grid>
    									<Path Data="M33.977998,27.684L33.977998,58.102997 41.373998,58.102997 41.373998,27.684z M14.841999,27.684L14.841999,58.102997 22.237998,58.102997 22.237998,27.684z M4.0319996,22.433001L52.183,22.433001 52.183,63.999001 4.0319996,63.999001z M15.974,0L40.195001,0 40.195001,7.7260003 56.167001,7.7260003 56.167001,16.000999 0,16.000999 0,7.7260003 15.974,7.7260003z" Stretch="Uniform" Fill="#FFFFFFFF" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
										  <Path.RenderTransform>
											<TransformGroup>
												<RotateTransform Angle="0" />
												<ScaleTransform ScaleX="1" ScaleY="1" />
											</TransformGroup>
										  </Path.RenderTransform>
										</Path>
    								</Grid>
    							</Viewbox>
    						</Grid>
    						<TextBlock
    							x:Name="TextLabel"
    							Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
    							Margin="0,0,2,0"
    							FontSize="12"
    							TextAlignment="Center"
    							Width="88"
    							MaxHeight="32"
    							TextTrimming="WordEllipsis"
    							Style="{StaticResource BasicTextStyle}" Text="{TemplateBinding Content}"/>
    					</StackPanel>
    					<Rectangle
    						x:Name="FocusVisualWhite"
    						IsHitTestVisible="False"
    						Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
    						StrokeEndLineCap="Square"
    						StrokeDashArray="1,1"
    						Opacity="0"
    						StrokeDashOffset="1.5"/>
    					<Rectangle
    						x:Name="FocusVisualBlack"
    						IsHitTestVisible="False"
    						Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
    						StrokeEndLineCap="Square"
    						StrokeDashArray="1,1"
    						Opacity="0"
    						StrokeDashOffset="0.5"/>

    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="SuggesEditAppBarButtonStyle" TargetType="Button">
    	<Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
    	<Setter Property="VerticalAlignment" Value="Stretch"/>
    	<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
    	<Setter Property="FontWeight" Value="Normal"/>
    	<Setter Property="FontSize" Value="20"/>
    	<Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="Button">
    				<Grid x:Name="RootGrid" Width="100" Background="Transparent">

    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="ApplicationViewStates">
    							<VisualState x:Name="FullScreenLandscape"/>
    							<VisualState x:Name="Filled"/>
    							<VisualState x:Name="FullScreenPortrait">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Snapped">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="PointerOver">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TextLabel">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ColorAnimation Duration="0" To="#33FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Fill" d:IsOptimized="True"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path1">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path1">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="Stroke">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Focused">
    								<Storyboard>
    									<DoubleAnimation
    										Storyboard.TargetName="FocusVisualWhite"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    									<DoubleAnimation
    										Storyboard.TargetName="FocusVisualBlack"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unfocused" />
    							<VisualState x:Name="PointerFocused" />
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CheckStates">
    							<VisualState x:Name="Checked">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unchecked"/>
    							<VisualState x:Name="Indeterminate"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
    						<Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
    							<Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" x:Name="pressed" Visibility="Collapsed">
    								<Grid>
    									<Grid x:Name="backgroundGrid" Width="48" Height="48" Visibility="Visible">
    										<Ellipse Fill="#FFFFFFFF" x:Name="Fill" Visibility="Visible" />
    									</Grid>
    									<Path x:Name="path1" Data="M0,44.439791L18.98951,54.569246 0.47998798,62.66881z M17.428029,12.359973L36.955557,23.568769 21.957478,49.686174 20.847757,46.346189 15.11851,45.756407 14.138656,42.166935 8.5292659,41.966761 6.9493899,38.037481 2.4399572,38.477377z M26.812517,0.0009765625C27.350616,-0.012230873,27.875986,0.10826397,28.348372,0.3782568L42.175028,8.3180408C43.85462,9.2780154,44.234529,11.777948,43.02482,13.89789L41.375219,16.767812 21.460039,5.3381228 23.10964,2.4582005C23.979116,0.941679,25.437378,0.034730911,26.812517,0.0009765625z" Stretch="Uniform" Fill="#FFFFFFFF" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
										  <Path.RenderTransform>
											<TransformGroup>
												<RotateTransform Angle="0" />
												<ScaleTransform ScaleX="1" ScaleY="1" />
											</TransformGroup>
										  </Path.RenderTransform>
										</Path>
    								</Grid>
    							</Viewbox>
    							<Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" x:Name="normal">
    								<Grid>
    									<Grid x:Name="backgroundGridNormal" Width="48" Height="48" Visibility="Visible">
    										<Path Data="M50.5,4.7500001C25.232973,4.75 4.75,25.232973 4.7500001,50.5 4.75,75.767029 25.232973,96.25 50.5,96.25 75.767029,96.25 96.25,75.767029 96.25,50.5 96.25,25.232973 75.767029,4.75 50.5,4.7500001z M50.5,0C78.390381,0 101,22.609621 101,50.5 101,78.390381 78.390381,101 50.5,101 22.609621,101 0,78.390381 0,50.5 0,22.609621 22.609621,0 50.5,0z" Stretch="Fill" Fill="#FFFFFFFF" x:Name="Stroke" Visibility="Visible" />
    									</Grid>
    									<Path Data="M0,44.439791L18.98951,54.569246 0.47998798,62.66881z M17.428029,12.359973L36.955557,23.568769 21.957478,49.686174 20.847757,46.346189 15.11851,45.756407 14.138656,42.166935 8.5292659,41.966761 6.9493899,38.037481 2.4399572,38.477377z M26.812517,0.0009765625C27.350616,-0.012230873,27.875986,0.10826397,28.348372,0.3782568L42.175028,8.3180408C43.85462,9.2780154,44.234529,11.777948,43.02482,13.89789L41.375219,16.767812 21.460039,5.3381228 23.10964,2.4582005C23.979116,0.941679,25.437378,0.034730911,26.812517,0.0009765625z" Stretch="Uniform" Fill="#FFFFFFFF" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
										  <Path.RenderTransform>
											<TransformGroup>
												<RotateTransform Angle="0" />
												<ScaleTransform ScaleX="1" ScaleY="1" />
											</TransformGroup>
										  </Path.RenderTransform>
										</Path>
    								</Grid>
    							</Viewbox>
    						</Grid>
    						<TextBlock
    							x:Name="TextLabel"
    							Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
    							Margin="0,0,2,0"
    							FontSize="12"
    							TextAlignment="Center"
    							Width="88"
    							MaxHeight="32"
    							TextTrimming="WordEllipsis"
    							Style="{StaticResource BasicTextStyle}" Text="{TemplateBinding Content}"/>
    					</StackPanel>
    					<Rectangle
    						x:Name="FocusVisualWhite"
    						IsHitTestVisible="False"
    						Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
    						StrokeEndLineCap="Square"
    						StrokeDashArray="1,1"
    						Opacity="0"
    						StrokeDashOffset="1.5"/>
    					<Rectangle
    						x:Name="FocusVisualBlack"
    						IsHitTestVisible="False"
    						Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
    						StrokeEndLineCap="Square"
    						StrokeDashArray="1,1"
    						Opacity="0"
    						StrokeDashOffset="0.5"/>

    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="SuggesFlyoutHyperlinkButtonStyle" TargetType="HyperlinkButton">
    	<Setter Property="Foreground" Value="{StaticResource HyperlinkForegroundThemeBrush}"/>
    	<Setter Property="Background" Value="{StaticResource HyperlinkButtonBackgroundThemeBrush}"/>
    	<Setter Property="BorderBrush" Value="{StaticResource HyperlinkButtonBorderThemeBrush}"/>
    	<Setter Property="BorderThickness" Value="{StaticResource HyperlinkButtonBorderThemeThickness}"/>
    	<Setter Property="Padding" Value="12,4,12,5"/>
    	<Setter Property="HorizontalAlignment" Value="Left"/>
    	<Setter Property="VerticalAlignment" Value="Center"/>
    	<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
    	<Setter Property="FontWeight" Value="SemiBold"/>
    	<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="HyperlinkButton">
    				<Grid>
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="PointerOver">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ContentPresenter.Foreground)" Storyboard.TargetName="ContentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ContentPresenter.Foreground)" Storyboard.TargetName="ContentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(ContentPresenter.Foreground)" Storyboard.TargetName="ContentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Focused">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unfocused"/>
    							<VisualState x:Name="PointerFocused"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="3">
    						<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{StaticResource SuggesBackgroundColor}"/>
    					</Border>
    					<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
    					<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="SuggesGroupedItemGridView_ItemsGenerated_Container" TargetType="GridViewItem">
    	<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
    	<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
    	<Setter Property="Background" Value="Transparent"/>
    	<Setter Property="TabNavigation" Value="Local"/>
    	<Setter Property="IsHoldingEnabled" Value="True"/>
    	<Setter Property="Margin" Value="0,0,2,2"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="GridViewItem">
    				<Border x:Name="OuterContainer">
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="PointerOver">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="PointerOverBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<PointerDownThemeAnimation TargetName="ContentContainer"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="PointerOverPressed">
    								<Storyboard>
    									<PointerDownThemeAnimation TargetName="ContentContainer"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="PointerOverBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesDescriptionForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Focused">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unfocused"/>
    							<VisualState x:Name="PointerFocused"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="SelectionHintStates">
    							<VisualStateGroup.Transitions>
    								<VisualTransition GeneratedDuration="0:0:0.65" To="NoSelectionHint"/>
    							</VisualStateGroup.Transitions>
    							<VisualState x:Name="VerticalSelectionHint">
    								<Storyboard>
    									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectionBackground" ToVerticalOffset="15"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="ContentBorder" ToVerticalOffset="15"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedBorder" ToVerticalOffset="15"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedCheckMark" ToVerticalOffset="15"/>
    									<DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
    										<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
    										<DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="HorizontalSelectionHint">
    								<Storyboard>
    									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectionBackground" ToVerticalOffset="0"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="ContentBorder" ToVerticalOffset="0"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedBorder" ToVerticalOffset="0"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedCheckMark" ToVerticalOffset="0"/>
    									<DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
    										<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
    										<DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="NoSelectionHint"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="SelectionStates">
    							<VisualState x:Name="Unselecting">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unselected">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="UnselectedPointerOver">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="UnselectedSwiping">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Selecting">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectionBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Selected">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectionBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectedEarmark">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="SelectedSwiping">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectionBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectedEarmark">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="SelectedUnfocused">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectionBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectedEarmark">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="DragStates">
    							<VisualStateGroup.Transitions>
    								<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
    							</VisualStateGroup.Transitions>
    							<VisualState x:Name="NotDragging"/>
    							<VisualState x:Name="Dragging">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" 
                                                         Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InnerDragContent"/>
    									<DragItemThemeAnimation TargetName="InnerDragContent"/>
    									<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
    									<FadeOutThemeAnimation TargetName="SelectedBorder"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="DraggingTarget">
    								<Storyboard>
    									<DropTargetItemThemeAnimation TargetName="OuterContainer"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="MultipleDraggingPrimary">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayText"/>
    									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" 
                                                         Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentBorder"/>
    									<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground"/>
    									<FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
    									<DragItemThemeAnimation TargetName="ContentBorder"/>
    									<FadeOutThemeAnimation TargetName="SelectionBackground"/>
    									<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
    									<FadeOutThemeAnimation TargetName="SelectedBorder"/>
    									<FadeOutThemeAnimation TargetName="PointerOverBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="MultiArrangeOverlayBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="MultipleDraggingSecondary">
    								<Storyboard>
    									<FadeOutThemeAnimation TargetName="ContentContainer"/>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="ReorderHintStates">
    							<VisualStateGroup.Transitions>
    								<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
    							</VisualStateGroup.Transitions>
    							<VisualState x:Name="NoReorderHint"/>
    							<VisualState x:Name="BottomReorderHint">
    								<Storyboard>
    									<DragOverThemeAnimation Direction="Bottom" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" 
                                                                TargetName="ReorderHintContent"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="TopReorderHint">
    								<Storyboard>
    									<DragOverThemeAnimation Direction="Top" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="RightReorderHint">
    								<Storyboard>
    									<DragOverThemeAnimation Direction="Right" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="LeftReorderHint">
    								<Storyboard>
    									<DragOverThemeAnimation Direction="Left" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="DataVirtualizationStates">
    							<VisualState x:Name="DataAvailable"/>
    							<VisualState x:Name="DataPlaceholder">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Grid x:Name="ReorderHintContent" Background="Transparent">
    						<Path x:Name="SelectingGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" 
                                  Fill="{StaticResource ListViewItemCheckSelectingThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,9.5,9.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
    						<Border x:Name="HintGlyphBorder" HorizontalAlignment="Right" Height="40" Margin="4" Opacity="0" VerticalAlignment="Top" Width="40">
    							<Path x:Name="HintGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" 
                                      Fill="{StaticResource ListViewItemCheckHintThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
    						</Border>
    						<Border x:Name="ContentContainer">
    							<Grid x:Name="InnerDragContent">
                                    <Rectangle x:Name="PointerOverBorder" Fill="{StaticResource SuggesGroupTitleForegroundColor}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
    								<Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ListViewItemFocusBorderThemeBrush}" StrokeThickness="2"/>
    								<Rectangle x:Name="SelectionBackground" Fill="{StaticResource SuggesLightShadowsBackgroundColor}" Margin="4" Opacity="0"/>
    								<Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="4">
    									<Grid>
    										<ContentPresenter x:Name="contentPresenter" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                              Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    										<TextBlock x:Name="PlaceholderTextBlock" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Text="Xg" Visibility="Collapsed"/>
    										<Rectangle x:Name="PlaceholderRect" Fill="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
    										<Rectangle x:Name="MultiArrangeOverlayBackground" Fill="{StaticResource ListViewItemDragBackgroundThemeBrush}" IsHitTestVisible="False" Opacity="0"/>
    									</Grid>
    								</Border>
                                    <Rectangle x:Name="SelectedBorder" IsHitTestVisible="False" Margin="4" Opacity="0" Stroke="{StaticResource SuggesGroupTitleForegroundColor}" StrokeThickness="{StaticResource GridViewItemSelectedBorderThemeThickness}"/>
    								<Border x:Name="SelectedCheckMarkOuter" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="4" VerticalAlignment="Top">
    									<Grid x:Name="SelectedCheckMark" Height="40" Opacity="0" Width="40">
                                            <Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{StaticResource SuggesGroupTitleForegroundColor}" Stretch="Fill"/>
    										<Path Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
    									</Grid>
    								</Border>
    								<TextBlock x:Name="MultiArrangeOverlayText" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontSize="26.667" FontFamily="{StaticResource ContentControlThemeFontFamily}" IsHitTestVisible="False" Margin="18,9,0,0" Opacity="0" TextWrapping="Wrap" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextTrimming="WordEllipsis"/>
    							</Grid>
    						</Border>
    					</Grid>
    				</Border>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="SuggesGroupedItemListView_ItemsGenerated_Container" TargetType="ListViewItem">
    	<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
    	<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
    	<Setter Property="Background" Value="Transparent"/>
    	<Setter Property="TabNavigation" Value="Local"/>
    	<Setter Property="IsHoldingEnabled" Value="True"/>
    	<Setter Property="Margin" Value="0,0,18,2"/>
    	<Setter Property="HorizontalContentAlignment" Value="Left"/>
    	<Setter Property="VerticalContentAlignment" Value="Top"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="ListViewItem">
    				<Border x:Name="OuterContainer">
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="PointerOver">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesDescriptionForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="PointerOverBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesDescriptionForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<PointerDownThemeAnimation TargetName="ContentContainer"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="PointerOverPressed">
    								<Storyboard>
    									<PointerDownThemeAnimation TargetName="ContentContainer"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="PointerOverBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesDescriptionForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDisabledThemeOpacity}" 
                                                         Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Focused">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unfocused"/>
    							<VisualState x:Name="PointerFocused"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="SelectionHintStates">
    							<VisualStateGroup.Transitions>
    								<VisualTransition GeneratedDuration="0:0:0.65" To="NoSelectionHint"/>
    							</VisualStateGroup.Transitions>
    							<VisualState x:Name="VerticalSelectionHint">
    								<Storyboard>
    									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectionBackground" ToVerticalOffset="15"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="ContentBorder" ToVerticalOffset="15"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedBorder" ToVerticalOffset="15"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedCheckMark" ToVerticalOffset="15"/>
    									<DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
    										<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
    										<DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="HorizontalSelectionHint">
    								<Storyboard>
    									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectionBackground" ToVerticalOffset="0"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="ContentBorder" ToVerticalOffset="0"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedBorder" ToVerticalOffset="0"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedCheckMark" ToVerticalOffset="0"/>
    									<DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
    										<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
    										<DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="NoSelectionHint"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="SelectionStates">
    							<VisualState x:Name="Unselecting">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unselected">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="UnselectedPointerOver">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="UnselectedSwiping">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Selecting">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectionBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Selected">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectionBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectedEarmark">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="SelectedSwiping">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectionBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectedEarmark">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="SelectedUnfocused">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectionBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectedEarmark">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="DragStates">
    							<VisualStateGroup.Transitions>
    								<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
    							</VisualStateGroup.Transitions>
    							<VisualState x:Name="NotDragging"/>
    							<VisualState x:Name="Dragging">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InnerDragContent"/>
    									<DragItemThemeAnimation TargetName="InnerDragContent"/>
    									<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
    									<FadeOutThemeAnimation TargetName="SelectedBorder"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="DraggingTarget">
    								<Storyboard>
    									<DropTargetItemThemeAnimation TargetName="OuterContainer"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="MultipleDraggingPrimary">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayText"/>
    									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentBorder"/>
    									<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground"/>
    									<FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
    									<DragItemThemeAnimation TargetName="ContentBorder"/>
    									<FadeOutThemeAnimation TargetName="SelectionBackground"/>
    									<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
    									<FadeOutThemeAnimation TargetName="SelectedBorder"/>
    									<FadeOutThemeAnimation TargetName="PointerOverBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="SelectedBorder">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="MultiArrangeOverlayBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="MultipleDraggingSecondary">
    								<Storyboard>
    									<FadeOutThemeAnimation TargetName="ContentContainer"/>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="ReorderHintStates">
    							<VisualStateGroup.Transitions>
    								<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
    							</VisualStateGroup.Transitions>
    							<VisualState x:Name="NoReorderHint"/>
    							<VisualState x:Name="BottomReorderHint">
    								<Storyboard>
    									<DragOverThemeAnimation Direction="Bottom" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="TopReorderHint">
    								<Storyboard>
    									<DragOverThemeAnimation Direction="Top" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="RightReorderHint">
    								<Storyboard>
    									<DragOverThemeAnimation Direction="Right" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="LeftReorderHint">
    								<Storyboard>
    									<DragOverThemeAnimation Direction="Left" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="DataVirtualizationStates">
    							<VisualState x:Name="DataAvailable"/>
    							<VisualState x:Name="DataPlaceholder">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Grid x:Name="ReorderHintContent" Background="Transparent">
    						<Path x:Name="SelectingGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckSelectingThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,9.5,9.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
    						<Border x:Name="HintGlyphBorder" HorizontalAlignment="Right" Height="40" Margin="4" Opacity="0" VerticalAlignment="Top" Width="40">
    							<Path x:Name="HintGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckHintThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
    						</Border>
    						<Border x:Name="ContentContainer">
    							<Grid x:Name="InnerDragContent">
    								<Rectangle x:Name="PointerOverBorder" Fill="{StaticResource SuggesLightShadowsBackgroundColor}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
    								<Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ListViewItemFocusBorderThemeBrush}" StrokeThickness="2"/>
    								<Rectangle x:Name="SelectionBackground" Fill="{StaticResource SuggesLightShadowsBackgroundColor}" Margin="4" Opacity="0"/>
    								<Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="4">
    									<Grid>
    										<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    										<TextBlock x:Name="PlaceholderTextBlock" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
    										<Rectangle x:Name="PlaceholderRect" Fill="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
    										<Rectangle x:Name="MultiArrangeOverlayBackground" Fill="{StaticResource ListViewItemDragBackgroundThemeBrush}" IsHitTestVisible="False" Opacity="0"/>
    									</Grid>
    								</Border>
    								<Rectangle x:Name="SelectedBorder" IsHitTestVisible="False" Margin="4" Opacity="0" Stroke="{StaticResource SuggesLightShadowsBackgroundColor}" StrokeThickness="{StaticResource ListViewItemSelectedBorderThemeThickness}"/>
    								<Border x:Name="SelectedCheckMarkOuter" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="4" VerticalAlignment="Top">
    									<Grid x:Name="SelectedCheckMark" Height="40" Opacity="0" Width="40">
    										<Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{StaticResource SuggesLightShadowsBackgroundColor}" Stretch="Fill"/>
    										<Path Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
    									</Grid>
    								</Border>
    								<TextBlock x:Name="MultiArrangeOverlayText" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontSize="26.667" FontFamily="{StaticResource ContentControlThemeFontFamily}" IsHitTestVisible="False" Margin="18,9,0,0" Opacity="0" TextWrapping="Wrap" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextTrimming="WordEllipsis"/>
    							</Grid>
    						</Border>
    					</Grid>
    				</Border>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <DataTemplate x:Key="SuggesGroupedItemGridView_ItemsGenerated_Items">
    	<Grid HorizontalAlignment="Left" Width="300">
    		<StackPanel VerticalAlignment="Top" Background="{StaticResource SuggesDescriptionForegroundColor}">
    			<TextBlock Text="{Binding Title}" Visibility="{Binding Title, Converter={StaticResource nullToVisibilityConverter}}" Foreground="{StaticResource SuggesFlyoutBackgroundColor}" Style="{StaticResource TitleTextStyle}" Height="25" Margin="15,5,15,0" MaxHeight="50" LineStackingStrategy="BlockLineHeight" TextTrimming="WordEllipsis"/>
    			<TextBlock Text="{Binding Description}" Visibility="{Binding Description, Converter={StaticResource nullToVisibilityConverter}}" Foreground="{StaticResource SuggesGroupTitleForegroundColor}" Style="{StaticResource SubtitleTextStyle}" TextWrapping="Wrap" Margin="15,0,15,15" MaxHeight="45" FontSize="{StaticResource TripDescriptionFontSize}" TextTrimming="WordEllipsis" LineStackingStrategy="MaxHeight"/>
    			<TextBlock Foreground="{StaticResource SuggesGroupTitleForegroundColor}" 
    				Style="{StaticResource SubtitleTextStyle}" 
    				TextWrapping="Wrap" Margin="15,0,15,15" 
    				MaxHeight="30" TextTrimming="WordEllipsis" 
                    Visibility="{Binding Cost, Converter={StaticResource nullToVisibilityConverter}}"
    				LineStackingStrategy="BlockLineHeight" 
    				FontSize="24" Text="{Binding Cost}" >
    			</TextBlock>
    		</StackPanel>
    	</Grid>
    </DataTemplate>
    <ItemsPanelTemplate x:Key="SuggesGroupedItemGridView_GroupsGenerated">
    	<VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,20,0"/>
    </ItemsPanelTemplate>
    <DataTemplate x:Key="SuggesGroupedItemListView_ItemsGenerated_Items">
    	<Grid Width="300" Background="{StaticResource SuggesDescriptionForegroundColor}">
    		<StackPanel Margin="10">
    			<TextBlock Text="{Binding Title}" Style="{StaticResource ItemTextStyle}" Foreground="{StaticResource SuggesGroupTitleForegroundColor}" TextWrapping="NoWrap" LineStackingStrategy="BlockLineHeight" Height="20"/>
    			<TextBlock Text="{Binding Description}" Style="{StaticResource CaptionTextStyle}" TextWrapping="Wrap" Foreground="{StaticResource SuggesSecondaryDescriptionForegroundColor}" LineStackingStrategy="BlockLineHeight" TextTrimming="None"/>
    			<TextBlock Text="{Binding Cost}" Style="{StaticResource ItemTextStyle}" Foreground="{StaticResource SuggesFlyoutBackgroundColor}" TextWrapping="NoWrap" LineStackingStrategy="BlockLineHeight" Height="21"/>
    		</StackPanel>
    	</Grid>
    </DataTemplate>
    <Style x:Key="SuggesBackButtonStyle" TargetType="Button">
    	<Setter Property="MinWidth" Value="0"/>
    	<Setter Property="Width" Value="48"/>
    	<Setter Property="Height" Value="48"/>
    	<Setter Property="Margin" Value="36,0,36,36"/>
    	<Setter Property="VerticalAlignment" Value="Bottom"/>
    	<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
    	<Setter Property="FontWeight" Value="Normal"/>
    	<Setter Property="FontSize" Value="56"/>
    	<Setter Property="AutomationProperties.AutomationId" Value="BackButton"/>
    	<Setter Property="AutomationProperties.Name" Value="Back"/>
    	<Setter Property="AutomationProperties.ItemType" Value="Navigation Button"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="Button">
    				<Grid x:Name="RootGrid">

    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal" />
    							<VisualState x:Name="PointerOver">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverBackgroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGlyph" Storyboard.TargetProperty="Foreground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesFlyoutBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ArrowGlyph" Storyboard.TargetProperty="Foreground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<DoubleAnimation
    										Storyboard.TargetName="ArrowGlyph"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    									<DoubleAnimation
    										Storyboard.TargetName="NormalGlyph"
    										Storyboard.TargetProperty="Opacity"
    										To="0"
    										Duration="0"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Focused">
    								<Storyboard>
    									<DoubleAnimation
    										Storyboard.TargetName="FocusVisualWhite"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    									<DoubleAnimation
    										Storyboard.TargetName="FocusVisualBlack"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unfocused" />
    							<VisualState x:Name="PointerFocused" />
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Grid Margin="-1,-16,0,0">
    						<TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" Foreground="{StaticResource BackButtonBackgroundThemeBrush}"/>
    						<TextBlock x:Name="NormalGlyph" Text="{StaticResource BackButtonGlyph}" Foreground="{StaticResource SuggesFlyoutBackgroundColor}"/>
    						<TextBlock x:Name="ArrowGlyph" Text="&#xE0A6;" Foreground="{StaticResource BackButtonPressedForegroundThemeBrush}" Opacity="0"/>
    					</Grid>
    					<Rectangle
    						x:Name="FocusVisualWhite"
    						IsHitTestVisible="False"
    						Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
    						StrokeEndLineCap="Square"
    						StrokeDashArray="1,1"
    						Opacity="0"
    						StrokeDashOffset="1.5"/>
    					<Rectangle
    						x:Name="FocusVisualBlack"
    						IsHitTestVisible="False"
    						Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
    						StrokeEndLineCap="Square"
    						StrokeDashArray="1,1"
    						Opacity="0"
    						StrokeDashOffset="0.5"/>

    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="SuggesCameraAppBarButtonStyle" TargetType="Button">
    	<Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
    	<Setter Property="VerticalAlignment" Value="Stretch"/>
    	<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
    	<Setter Property="FontWeight" Value="Normal"/>
    	<Setter Property="FontSize" Value="20"/>
    	<Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="Button">
    				<Grid x:Name="RootGrid" Width="100" Background="Transparent">

    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="ApplicationViewStates">
    							<VisualState x:Name="FullScreenLandscape"/>
    							<VisualState x:Name="Filled"/>
    							<VisualState x:Name="FullScreenPortrait">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Snapped">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="PointerOver">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TextLabel">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ColorAnimation Duration="0" To="#33FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Fill" d:IsOptimized="True"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path1">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path1">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="Stroke">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Focused">
    								<Storyboard>
    									<DoubleAnimation
    										Storyboard.TargetName="FocusVisualWhite"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    									<DoubleAnimation
    										Storyboard.TargetName="FocusVisualBlack"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unfocused" />
    							<VisualState x:Name="PointerFocused" />
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CheckStates">
    							<VisualState x:Name="Checked">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unchecked"/>
    							<VisualState x:Name="Indeterminate"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
    						<Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
    							<Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" x:Name="pressed" Visibility="Collapsed">
    								<Grid>
    									<Grid x:Name="backgroundGrid" Width="48" Height="48" Visibility="Visible">
    										<Ellipse Fill="#FFFFFFFF" x:Name="Fill" Visibility="Visible" />
    									</Grid>
    									<Path x:Name="path1" Data="M31.478432,15.239C36.687607,15.239 40.906941,19.457997 40.906941,24.661992 40.906941,29.865988 36.687607,34.085986 31.478432,34.085986 26.279251,34.085986 22.059918,29.865988 22.059918,24.661992 22.059918,19.457997 26.279251,15.239 31.478432,15.239z M31.425879,9.8389888C23.416933,9.8389888 16.88777,16.362975 16.88777,24.379973 16.88777,32.394988 23.416933,38.916991 31.425879,38.916991 39.444832,38.916991 45.963986,32.394988 45.963986,24.379973 45.963986,16.362975 39.444832,9.8389888 31.425879,9.8389888z M43.904202,0C45.124008,-2.9131115E-08,46.113869,0.98797598,46.113869,2.205993L46.113869,4.8519898C46.113869,4.9059749,46.103981,4.9589839,46.103981,5.013L49.523449,5.013C51.613137,5.013,53.333,6.7279964,53.333,8.8219905L53.333,39.297972C53.333,41.392973,51.613137,43.108,49.523449,43.108L3.8095522,43.108C1.7198642,43.108,0,41.392973,0,39.297972L0,8.8219905C0,6.7279964,1.7198642,5.013,3.8095522,5.013L5.6292574,5.013C5.6192486,4.9459834,5.6192486,4.8799739,5.6192486,4.8109741L5.6192486,3.6089783C5.6192486,1.836975,7.0491121,0.40100091,8.8188965,0.40100085L22.057127,0.40100085C23.826912,0.40100091,25.266663,1.836975,25.266663,3.6089783L25.266663,4.8109741C25.266663,4.8799739,25.256653,4.9459834,25.246645,5.013L41.71455,5.013C41.70454,4.9589839,41.70454,4.9059749,41.70454,4.8519898L41.70454,2.205993C41.70454,1.8799743,41.774479,1.5699767,41.904465,1.2909849L41.904465,1.2019956 41.9445,1.2019956C42.314446,0.48999017,43.054337,-2.9131115E-08,43.904202,0z" Stretch="Uniform" Fill="#FFFFFFFF" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
										  <Path.RenderTransform>
											<TransformGroup>
											  <TransformGroup.Children>
												<RotateTransform Angle="0" />
												<ScaleTransform ScaleX="1" ScaleY="1" />
											  </TransformGroup.Children>
											</TransformGroup>
										  </Path.RenderTransform>
										</Path>
    								</Grid>
    							</Viewbox>
    							<Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" x:Name="normal">
    								<Grid>
    									<Grid x:Name="backgroundGridNormal" Width="48" Height="48" Visibility="Visible">
    										<Path Data="M50.5,4.7500001C25.232973,4.75 4.75,25.232973 4.7500001,50.5 4.75,75.767029 25.232973,96.25 50.5,96.25 75.767029,96.25 96.25,75.767029 96.25,50.5 96.25,25.232973 75.767029,4.75 50.5,4.7500001z M50.5,0C78.390381,0 101,22.609621 101,50.5 101,78.390381 78.390381,101 50.5,101 22.609621,101 0,78.390381 0,50.5 0,22.609621 22.609621,0 50.5,0z" Stretch="Fill" Fill="#FFFFFFFF" x:Name="Stroke" Visibility="Visible" />
    									</Grid>
    									<Path Data="M31.478432,15.239C36.687607,15.239 40.906941,19.457997 40.906941,24.661992 40.906941,29.865988 36.687607,34.085986 31.478432,34.085986 26.279251,34.085986 22.059918,29.865988 22.059918,24.661992 22.059918,19.457997 26.279251,15.239 31.478432,15.239z M31.425879,9.8389888C23.416933,9.8389888 16.88777,16.362975 16.88777,24.379973 16.88777,32.394988 23.416933,38.916991 31.425879,38.916991 39.444832,38.916991 45.963986,32.394988 45.963986,24.379973 45.963986,16.362975 39.444832,9.8389888 31.425879,9.8389888z M43.904202,0C45.124008,-2.9131115E-08,46.113869,0.98797598,46.113869,2.205993L46.113869,4.8519898C46.113869,4.9059749,46.103981,4.9589839,46.103981,5.013L49.523449,5.013C51.613137,5.013,53.333,6.7279964,53.333,8.8219905L53.333,39.297972C53.333,41.392973,51.613137,43.108,49.523449,43.108L3.8095522,43.108C1.7198642,43.108,0,41.392973,0,39.297972L0,8.8219905C0,6.7279964,1.7198642,5.013,3.8095522,5.013L5.6292574,5.013C5.6192486,4.9459834,5.6192486,4.8799739,5.6192486,4.8109741L5.6192486,3.6089783C5.6192486,1.836975,7.0491121,0.40100091,8.8188965,0.40100085L22.057127,0.40100085C23.826912,0.40100091,25.266663,1.836975,25.266663,3.6089783L25.266663,4.8109741C25.266663,4.8799739,25.256653,4.9459834,25.246645,5.013L41.71455,5.013C41.70454,4.9589839,41.70454,4.9059749,41.70454,4.8519898L41.70454,2.205993C41.70454,1.8799743,41.774479,1.5699767,41.904465,1.2909849L41.904465,1.2019956 41.9445,1.2019956C42.314446,0.48999017,43.054337,-2.9131115E-08,43.904202,0z" Stretch="Uniform" Fill="#FFFFFFFF" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
										  <Path.RenderTransform>
											<TransformGroup>
											  <TransformGroup.Children>
												<RotateTransform Angle="0" />
												<ScaleTransform ScaleX="1" ScaleY="1" />
											  </TransformGroup.Children>
											</TransformGroup>
										  </Path.RenderTransform>
										</Path>
    								</Grid>
    							</Viewbox>
    						</Grid>
    						<TextBlock
    							x:Name="TextLabel"
    							Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
    							Margin="0,0,2,0"
    							FontSize="12"
    							TextAlignment="Center"
    							Width="88"
    							MaxHeight="32"
    							TextTrimming="WordEllipsis"
    							Style="{StaticResource BasicTextStyle}" Text="{TemplateBinding Content}"/>
    					</StackPanel>
    					<Rectangle
    						x:Name="FocusVisualWhite"
    						IsHitTestVisible="False"
    						Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
    						StrokeEndLineCap="Square"
    						StrokeDashArray="1,1"
    						Opacity="0"
    						StrokeDashOffset="1.5"/>
    					<Rectangle
    						x:Name="FocusVisualBlack"
    						IsHitTestVisible="False"
    						Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
    						StrokeEndLineCap="Square"
    						StrokeDashArray="1,1"
    						Opacity="0"
    						StrokeDashOffset="0.5"/>

    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="SuggesSnappedBackButtonStyle" TargetType="Button">
    	<Setter Property="MinWidth" Value="0"/>
    	<Setter Property="Width" Value="48"/>
    	<Setter Property="Height" Value="48"/>
    	<Setter Property="Margin" Value="36,0,36,36"/>
    	<Setter Property="VerticalAlignment" Value="Bottom"/>
    	<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
    	<Setter Property="FontWeight" Value="Normal"/>
    	<Setter Property="FontSize" Value="56"/>
    	<Setter Property="AutomationProperties.AutomationId" Value="BackButton"/>
    	<Setter Property="AutomationProperties.Name" Value="Back"/>
    	<Setter Property="AutomationProperties.ItemType" Value="Navigation Button"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="Button">
    				<Grid x:Name="RootGrid">

    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal" />
    							<VisualState x:Name="PointerOver">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackButtonPointerOverBackgroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="NormalGlyph" Storyboard.TargetProperty="Foreground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesFlyoutBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ArrowGlyph" Storyboard.TargetProperty="Foreground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<DoubleAnimation
    										Storyboard.TargetName="ArrowGlyph"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    									<DoubleAnimation
    										Storyboard.TargetName="NormalGlyph"
    										Storyboard.TargetProperty="Opacity"
    										To="0"
    										Duration="0"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Focused">
    								<Storyboard>
    									<DoubleAnimation
    										Storyboard.TargetName="FocusVisualWhite"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    									<DoubleAnimation
    										Storyboard.TargetName="FocusVisualBlack"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unfocused" />
    							<VisualState x:Name="PointerFocused" />
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Grid Margin="-1,-16,0,0">
    						<TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" Foreground="{StaticResource BackButtonBackgroundThemeBrush}" FontSize="36" Margin="0,16,0,0"/>
    						<TextBlock x:Name="NormalGlyph" Text="{StaticResource BackButtonGlyph}" Foreground="{StaticResource SuggesFlyoutBackgroundColor}" FontSize="36" Margin="0,16,0,0"/>
    						<TextBlock x:Name="ArrowGlyph" Text="&#xE0A6;" Foreground="{StaticResource BackButtonPressedForegroundThemeBrush}" Opacity="0" FontSize="36" Margin="0,16,0,0"/>
    					</Grid>
    					<Rectangle
    						x:Name="FocusVisualWhite"
    						IsHitTestVisible="False"
    						Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
    						StrokeEndLineCap="Square"
    						StrokeDashArray="1,1"
    						Opacity="0"
    						StrokeDashOffset="1.5"/>
    					<Rectangle
    						x:Name="FocusVisualBlack"
    						IsHitTestVisible="False"
    						Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
    						StrokeEndLineCap="Square"
    						StrokeDashArray="1,1"
    						Opacity="0"
    						StrokeDashOffset="0.5"/>

    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="SuggesComboBoxItemStyle" TargetType="ComboBoxItem">
    	<Setter Property="Background" Value="Transparent"/>
    	<Setter Property="TabNavigation" Value="Local"/>
    	<Setter Property="Padding" Value="8,10"/>
    	<Setter Property="HorizontalContentAlignment" Value="Left"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="ComboBoxItem">
    				<Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="PointerOver">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemPointerOverBackgroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemPointerOverForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PressedBackground"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemPressedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="SelectionStates">
    							<VisualState x:Name="Unselected"/>
    							<VisualState x:Name="Selected">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="SelectedUnfocused">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesDarkShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="SelectedDisabled">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemSelectedDisabledBackgroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemSelectedDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="SelectedPointerOver">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesDarkShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="SelectedPressed">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="InnerGrid">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListBoxItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Focused">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unfocused"/>
    							<VisualState x:Name="PointerFocused"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Grid x:Name="InnerGrid" Background="Transparent">
    						<Rectangle x:Name="PressedBackground" Fill="{StaticResource ListBoxItemPressedBackgroundThemeBrush}" Opacity="0"/>
    						<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    						<Rectangle x:Name="FocusVisualWhite" Opacity="0" StrokeDashOffset=".5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
    						<Rectangle x:Name="FocusVisualBlack" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
    					</Grid>
    				</Border>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="SuggesButtonImageContainer" TargetType="Button">
    	<Setter Property="Background" Value="{StaticResource ButtonBackgroundThemeBrush}"/>
    	<Setter Property="Foreground" Value="{StaticResource ButtonForegroundThemeBrush}"/>
    	<Setter Property="BorderBrush" Value="{StaticResource ButtonBorderThemeBrush}"/>
    	<Setter Property="BorderThickness" Value="{StaticResource ButtonBorderThemeThickness}"/>
    	<Setter Property="Padding" Value="12,4,12,4"/>
    	<Setter Property="HorizontalAlignment" Value="Left"/>
    	<Setter Property="VerticalAlignment" Value="Center"/>
    	<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
    	<Setter Property="FontWeight" Value="SemiBold"/>
    	<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="Button">
    				<Grid>
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="PointerOver">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPointerOverBackgroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPointerOverForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    						
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="-2" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="ContentPresenter" d:IsOptimized="True"/>
    								</Storyboard>
    						
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBackgroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledBorderThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Focused">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unfocused"/>
    							<VisualState x:Name="PointerFocused"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
    						<ContentPresenter x:Name="ContentPresenter" 
							ContentTemplate="{TemplateBinding ContentTemplate}" 
							ContentTransitions="{TemplateBinding ContentTransitions}" 
							Content="{TemplateBinding Content}" 
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
    							<ContentPresenter.Projection>
    								<PlaneProjection/>
    							</ContentPresenter.Projection>
    						</ContentPresenter>
    					</Border>
    					<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
    					<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="SuggesItemListView_ItemsGenerated_Container" TargetType="ListViewItem">
    	<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
    	<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
    	<Setter Property="Background" Value="Transparent"/>
    	<Setter Property="TabNavigation" Value="Local"/>
    	<Setter Property="IsHoldingEnabled" Value="True"/>
    	<Setter Property="Margin" Value="0,0,18,2"/>
    	<Setter Property="HorizontalContentAlignment" Value="Left"/>
    	<Setter Property="VerticalContentAlignment" Value="Top"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="ListViewItem">
    				<Border x:Name="OuterContainer">
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="PointerOver">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="PointerOverBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<PointerDownThemeAnimation TargetName="ContentContainer"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="PointerOverPressed">
    								<Storyboard>
    									<PointerDownThemeAnimation TargetName="ContentContainer"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="PointerOverBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesDescriptionForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDisabledThemeOpacity}" 
    										Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Focused">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unfocused"/>
    							<VisualState x:Name="PointerFocused"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="SelectionHintStates">
    							<VisualStateGroup.Transitions>
    								<VisualTransition GeneratedDuration="0:0:0.65" To="NoSelectionHint"/>
    							</VisualStateGroup.Transitions>
    							<VisualState x:Name="VerticalSelectionHint">
    								<Storyboard>
    									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectionBackground" ToVerticalOffset="15"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="ContentBorder" ToVerticalOffset="15"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedBorder" ToVerticalOffset="15"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedCheckMark" ToVerticalOffset="15"/>
    									<DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
    										<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
    										<DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="HorizontalSelectionHint">
    								<Storyboard>
    									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectionBackground" ToVerticalOffset="0"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="ContentBorder" ToVerticalOffset="0"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedBorder" ToVerticalOffset="0"/>
    									<SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedCheckMark" ToVerticalOffset="0"/>
    									<DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
    										<DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
    										<DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
    									</DoubleAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="NoSelectionHint"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="SelectionStates">
    							<VisualState x:Name="Unselecting">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unselected">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="UnselectedPointerOver">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="UnselectedSwiping">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Selecting">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectionBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Selected">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectionBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectedEarmark">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="SelectedSwiping">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectionBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectedEarmark">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="SelectedUnfocused">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentPresenter">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ListViewItemSelectedForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectionBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="SelectedEarmark">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="DragStates">
    							<VisualStateGroup.Transitions>
    								<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
    							</VisualStateGroup.Transitions>
    							<VisualState x:Name="NotDragging"/>
    							<VisualState x:Name="Dragging">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InnerDragContent"/>
    									<DragItemThemeAnimation TargetName="InnerDragContent"/>
    									<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
    									<FadeOutThemeAnimation TargetName="SelectedBorder"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="DraggingTarget">
    								<Storyboard>
    									<DropTargetItemThemeAnimation TargetName="OuterContainer"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="MultipleDraggingPrimary">
    								<Storyboard>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayBackground"/>
    									<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayText"/>
    									<DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentBorder"/>
    									<FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground"/>
    									<FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
    									<DragItemThemeAnimation TargetName="ContentBorder"/>
    									<FadeOutThemeAnimation TargetName="SelectionBackground"/>
    									<FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
    									<FadeOutThemeAnimation TargetName="SelectedBorder"/>
    									<FadeOutThemeAnimation TargetName="PointerOverBorder"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke)" Storyboard.TargetName="SelectedBorder">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="MultiArrangeOverlayBackground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesLightShadowsBackgroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="MultipleDraggingSecondary">
    								<Storyboard>
    									<FadeOutThemeAnimation TargetName="ContentContainer"/>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="ReorderHintStates">
    							<VisualStateGroup.Transitions>
    								<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
    							</VisualStateGroup.Transitions>
    							<VisualState x:Name="NoReorderHint"/>
    							<VisualState x:Name="BottomReorderHint">
    								<Storyboard>
    									<DragOverThemeAnimation Direction="Bottom" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="TopReorderHint">
    								<Storyboard>
    									<DragOverThemeAnimation Direction="Top" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="RightReorderHint">
    								<Storyboard>
    									<DragOverThemeAnimation Direction="Right" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="LeftReorderHint">
    								<Storyboard>
    									<DragOverThemeAnimation Direction="Left" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="DataVirtualizationStates">
    							<VisualState x:Name="DataAvailable"/>
    							<VisualState x:Name="DataPlaceholder">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Grid x:Name="ReorderHintContent" Background="Transparent">
    						<Path x:Name="SelectingGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckSelectingThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,9.5,9.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
    						<Border x:Name="HintGlyphBorder" HorizontalAlignment="Right" Height="40" Margin="4" Opacity="0" VerticalAlignment="Top" Width="40">
    							<Path x:Name="HintGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckHintThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
    						</Border>
    						<Border x:Name="ContentContainer">
    							<Grid x:Name="InnerDragContent">
    								<Rectangle x:Name="PointerOverBorder" Fill="{StaticResource SuggesLightShadowsBackgroundColor}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
    								<Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" Stroke="{StaticResource ListViewItemFocusBorderThemeBrush}" StrokeThickness="2"/>
    								<Rectangle x:Name="SelectionBackground" Fill="{StaticResource SuggesLightShadowsBackgroundColor}" Margin="4" Opacity="0"/>
    								<Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="4">
    									<Grid>
    										<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    										<TextBlock x:Name="PlaceholderTextBlock" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
    										<Rectangle x:Name="PlaceholderRect" Fill="{StaticResource ListViewItemPlaceholderBackgroundThemeBrush}" IsHitTestVisible="False" Visibility="Collapsed"/>
    										<Rectangle x:Name="MultiArrangeOverlayBackground" Fill="{StaticResource ListViewItemDragBackgroundThemeBrush}" IsHitTestVisible="False" Opacity="0"/>
    									</Grid>
    								</Border>
    								<Rectangle x:Name="SelectedBorder" IsHitTestVisible="False" Margin="4" Opacity="0" Stroke="{StaticResource SuggesLightShadowsBackgroundColor}" StrokeThickness="{StaticResource ListViewItemSelectedBorderThemeThickness}"/>
    								<Border x:Name="SelectedCheckMarkOuter" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="4" VerticalAlignment="Top">
    									<Grid x:Name="SelectedCheckMark" Height="40" Opacity="0" Width="40">
    										<Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="{StaticResource SuggesLightShadowsBackgroundColor}" Stretch="Fill"/>
    										<Path Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
    									</Grid>
    								</Border>
    								<TextBlock x:Name="MultiArrangeOverlayText" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontSize="26.667" FontFamily="{StaticResource ContentControlThemeFontFamily}" IsHitTestVisible="False" Margin="18,9,0,0" Opacity="0" TextWrapping="Wrap" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextTrimming="WordEllipsis"/>
    							</Grid>
    						</Border>
    					</Grid>
    				</Border>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="SuggesPinAppBarButtonStyle" TargetType="Button">
    	<Setter Property="Foreground" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
    	<Setter Property="VerticalAlignment" Value="Stretch"/>
    	<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
    	<Setter Property="FontWeight" Value="Normal"/>
    	<Setter Property="FontSize" Value="20"/>
    	<Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="Button">
    				<Grid x:Name="RootGrid" Width="100" Background="Transparent">

    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="ApplicationViewStates">
    							<VisualState x:Name="FullScreenLandscape"/>
    							<VisualState x:Name="Filled"/>
    							<VisualState x:Name="FullScreenPortrait">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Snapped">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="PointerOver">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TextLabel">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ColorAnimation Duration="0" To="#33FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="Fill" d:IsOptimized="True"/>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="path1">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Pressed">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path1">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SuggesGroupTitleForegroundColor}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Disabled">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="normal">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Visible</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="pressed">
    										<DiscreteObjectKeyFrame KeyTime="0">
    											<DiscreteObjectKeyFrame.Value>
    												<Visibility>Collapsed</Visibility>
    											</DiscreteObjectKeyFrame.Value>
    										</DiscreteObjectKeyFrame>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="Stroke">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="path">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="FocusStates">
    							<VisualState x:Name="Focused">
    								<Storyboard>
    									<DoubleAnimation
    										Storyboard.TargetName="FocusVisualWhite"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    									<DoubleAnimation
    										Storyboard.TargetName="FocusVisualBlack"
    										Storyboard.TargetProperty="Opacity"
    										To="1"
    										Duration="0"/>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unfocused" />
    							<VisualState x:Name="PointerFocused" />
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="CheckStates">
    							<VisualState x:Name="Checked">
    								<Storyboard>
    									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="Visibility">
    										<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
    									</ObjectAnimationUsingKeyFrames>
    								</Storyboard>
    							</VisualState>
    							<VisualState x:Name="Unchecked"/>
    							<VisualState x:Name="Indeterminate"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<StackPanel VerticalAlignment="Top" Margin="0,12,0,11">
    						<Grid Width="40" Height="40" Margin="0,0,0,5" HorizontalAlignment="Center">
    							<Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" x:Name="pressed" Visibility="Collapsed">
    								<Grid>
    									<Grid x:Name="backgroundGrid" Width="48" Height="48" Visibility="Visible">
    										<Ellipse Fill="#FFFFFFFF" x:Name="Fill" Visibility="Visible" />
    									</Grid>
    									<Path x:Name="path1" Data="F1M1525.83,266.24L1529.12,256.359 1539,246.478 1542.29,249.771 1552.17,246.478 1542.29,236.598 1545.59,233.304 1559.25,212.907 1539,226.718 1535.71,230.008 1540.88,235.189 1525.83,220.131 1522.53,230.008 1525.83,233.304 1515.95,243.181 1506.06,246.478 1525.83,266.24z" Stretch="Uniform" Fill="#FF000000" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
    										<Path.RenderTransform>
    											<TransformGroup>
    												<RotateTransform Angle="0" />
    												<ScaleTransform ScaleX="1" ScaleY="1" />
    											</TransformGroup>
    										</Path.RenderTransform>
    									</Path>
    								</Grid>
    							</Viewbox>
    							<Viewbox xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" x:Name="normal">
    								<Grid>
    									<Grid x:Name="backgroundGridNormal" Width="48" Height="48" Visibility="Visible">
    										<Path Data="M50.5,4.7500001C25.232973,4.75 4.75,25.232973 4.7500001,50.5 4.75,75.767029 25.232973,96.25 50.5,96.25 75.767029,96.25 96.25,75.767029 96.25,50.5 96.25,25.232973 75.767029,4.75 50.5,4.7500001z M50.5,0C78.390381,0 101,22.609621 101,50.5 101,78.390381 78.390381,101 50.5,101 22.609621,101 0,78.390381 0,50.5 0,22.609621 22.609621,0 50.5,0z" Stretch="Fill" Fill="#FFFFFFFF" x:Name="Stroke" Visibility="Visible" />
    									</Grid>
    									<Path x:Name="path" Data="F1M1525.83,266.24L1529.12,256.359 1539,246.478 1542.29,249.771 1552.17,246.478 1542.29,236.598 1545.59,233.304 1559.25,212.907 1539,226.718 1535.71,230.008 1540.88,235.189 1525.83,220.131 1522.53,230.008 1525.83,233.304 1515.95,243.181 1506.06,246.478 1525.83,266.24z" Stretch="Uniform" Fill="#FFFFFFFF" Width="26" Height="26" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
    										<Path.RenderTransform>
    											<TransformGroup>
    												<RotateTransform Angle="0" />
    												<ScaleTransform ScaleX="1" ScaleY="1" />
    											</TransformGroup>
    										</Path.RenderTransform>
    									</Path>
    								</Grid>
    							</Viewbox>
    						</Grid>
    						<TextBlock
    							x:Name="TextLabel"
    							Foreground="{StaticResource AppBarItemForegroundThemeBrush}"
    							Margin="0,0,2,0"
    							FontSize="12"
    							TextAlignment="Center"
    							Width="88"
    							MaxHeight="32"
    							TextTrimming="WordEllipsis"
    							Style="{StaticResource BasicTextStyle}" Text="{TemplateBinding Content}"/>
    					</StackPanel>
    					<Rectangle
    						x:Name="FocusVisualWhite"
    						IsHitTestVisible="False"
    						Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
    						StrokeEndLineCap="Square"
    						StrokeDashArray="1,1"
    						Opacity="0"
    						StrokeDashOffset="1.5"/>
    					<Rectangle
    						x:Name="FocusVisualBlack"
    						IsHitTestVisible="False"
    						Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
    						StrokeEndLineCap="Square"
    						StrokeDashArray="1,1"
    						Opacity="0"
    						StrokeDashOffset="0.5"/>

    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>

<!-- Collection of items displayed by this page -->

</ResourceDictionary>
