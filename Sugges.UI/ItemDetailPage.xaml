<common:LayoutAwarePage
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Sugges.UI"
    xmlns:viewModels="using:Sugges.UI.Logic.ViewModels"
    xmlns:common="using:Sugges.UI.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Converters="using:Sugges.UI.Converters"
    x:Name="pageRoot"
    x:Class="Sugges.UI.ItemDetailPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Mode=Self}}"
    mc:Ignorable="d">

    <common:LayoutAwarePage.Resources>

        <Converters:DateConverter x:Key="DateConverter"/>
        <Converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        
        <!-- Collection of items displayed by this page -->
        <CollectionViewSource
            x:Name="itemsViewSource"
            Source="{Binding ItemGroups}"
            IsSourceGrouped="true"
            ItemsPath="Items"
            d:Source="{Binding AllGroups[0].Items[0].ItemGroups, Source={d:DesignInstance IsDesignTimeCreatable=True, Type=viewModels:MainViewModel}}"/>

    </common:LayoutAwarePage.Resources>

    <common:LayoutAwarePage.BottomAppBar>
        <AppBar x:Name="bottomAppBar" BorderBrush="{x:Null}" Background="{StaticResource SuggesFlyoutBackgroundColor}">
			<Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="1" HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button x:Name="btnPin" Content="Pin" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource SuggesPinAppBarButtonStyle}" Click="btnPin_Click"/>
                    <Button x:Name="btnDelete" Content="Delete" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Click="btnDelete_Click" Style="{StaticResource SuggesDeleteAppBarButtonStyle}"/>                    
                    <Button x:Name="btnAdd" Content="Add Item" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource SuggesAddAppBarButtonStyle}" Click="btnAdd_Click"/>
                </StackPanel>
                <StackPanel Grid.Column="0" HorizontalAlignment="Left">
                    <Button x:Name="btnEdit" Content="Edit Trip" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Click="btnEdit_Click" Style="{StaticResource SuggesEditAppBarButtonStyle}"/>
                </StackPanel>
            </Grid>
		</AppBar>
	</common:LayoutAwarePage.BottomAppBar>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid DataContext="{Binding Group}" Style="{StaticResource LayoutRootStyle}" Background="{StaticResource SuggesBackgroundColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape">
                	<Storyboard>
                		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="backButtonSnapped">
                			<DiscreteObjectKeyFrame KeyTime="0">
                				<DiscreteObjectKeyFrame.Value>
                					<Visibility>Collapsed</Visibility>
                				</DiscreteObjectKeyFrame.Value>
                			</DiscreteObjectKeyFrame>
                		</ObjectAnimationUsingKeyFrames>
                	</Storyboard>
                </VisualState>
                <VisualState x:Name="Filled">
                	<Storyboard>
                		<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="backButtonSnapped">
                			<DiscreteObjectKeyFrame KeyTime="0">
                				<DiscreteObjectKeyFrame.Value>
                					<Visibility>Collapsed</Visibility>
                				</DiscreteObjectKeyFrame.Value>
                			</DiscreteObjectKeyFrame>
                		</ObjectAnimationUsingKeyFrames>
                	</Storyboard>
                </VisualState>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="backButtonSnapped">
                        	<DiscreteObjectKeyFrame KeyTime="0">
                        		<DiscreteObjectKeyFrame.Value>
                        			<Visibility>Collapsed</Visibility>
                        		</DiscreteObjectKeyFrame.Value>
                        	</DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    	<DoubleAnimation Duration="0" To="32" Storyboard.TargetProperty="(TextBlock.FontSize)" Storyboard.TargetName="pageTitle" d:IsOptimized="True"/>
                    	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="backButtonSnapped">
                    		<DiscreteObjectKeyFrame KeyTime="0">
                    			<DiscreteObjectKeyFrame.Value>
                    				<x:Double>80</x:Double>
                    			</DiscreteObjectKeyFrame.Value>
                    		</DiscreteObjectKeyFrame>
                    	</ObjectAnimationUsingKeyFrames>
                    	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="backButtonSnapped">
                    		<DiscreteObjectKeyFrame KeyTime="0">
                    			<DiscreteObjectKeyFrame.Value>
                    				<Thickness>20,0,0,0</Thickness>
                    			</DiscreteObjectKeyFrame.Value>
                    		</DiscreteObjectKeyFrame>
                    	</ObjectAnimationUsingKeyFrames>
                    	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Padding)" Storyboard.TargetName="backButtonSnapped">
                    		<DiscreteObjectKeyFrame KeyTime="0">
                    			<DiscreteObjectKeyFrame.Value>
                    				<Thickness>12,4</Thickness>
                    			</DiscreteObjectKeyFrame.Value>
                    		</DiscreteObjectKeyFrame>
                    	</ObjectAnimationUsingKeyFrames>
                    	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="backButtonSnapped">
                    		<DiscreteObjectKeyFrame KeyTime="0">
                    			<DiscreteObjectKeyFrame.Value>
                    				<x:Double>40</x:Double>
                    			</DiscreteObjectKeyFrame.Value>
                    		</DiscreteObjectKeyFrame>
                    	</ObjectAnimationUsingKeyFrames>
                    	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="backButtonSnapped">
                    		<DiscreteObjectKeyFrame KeyTime="0">
                    			<DiscreteObjectKeyFrame.Value>
                    				<Visibility>Visible</Visibility>
                    			</DiscreteObjectKeyFrame.Value>
                    		</DiscreteObjectKeyFrame>
                    	</ObjectAnimationUsingKeyFrames>
                    	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="pageTitle">
                    		<DiscreteObjectKeyFrame KeyTime="0">
                    			<DiscreteObjectKeyFrame.Value>
                    				<x:Double>30</x:Double>
                    			</DiscreteObjectKeyFrame.Value>
                    		</DiscreteObjectKeyFrame>
                    	</ObjectAnimationUsingKeyFrames>
                    	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="pageTitle">
                    		<DiscreteObjectKeyFrame KeyTime="0">
                    			<DiscreteObjectKeyFrame.Value>
                    				<Thickness>0,5,0,0</Thickness>
                    			</DiscreteObjectKeyFrame.Value>
                    		</DiscreteObjectKeyFrame>
                    	</ObjectAnimationUsingKeyFrames>
                    	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="itemListView">
                    		<DiscreteObjectKeyFrame KeyTime="0">
                    			<DiscreteObjectKeyFrame.Value>
                    				<Visibility>Visible</Visibility>
                    			</DiscreteObjectKeyFrame.Value>
                    		</DiscreteObjectKeyFrame>
                    	</ObjectAnimationUsingKeyFrames>
                    	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="itemGridView">
                    		<DiscreteObjectKeyFrame KeyTime="0">
                    			<DiscreteObjectKeyFrame.Value>
                    				<Visibility>Collapsed</Visibility>
                    			</DiscreteObjectKeyFrame.Value>
                    		</DiscreteObjectKeyFrame>
                    	</ObjectAnimationUsingKeyFrames>
                    	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnPin">
                    		<DiscreteObjectKeyFrame KeyTime="0">
                    			<DiscreteObjectKeyFrame.Value>
                    				<Visibility>Collapsed</Visibility>
                    			</DiscreteObjectKeyFrame.Value>
                    		</DiscreteObjectKeyFrame>
                    	</ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!-- Horizontal scrolling grid used in most view states -->
        <GridView
            x:Name="itemGridView"
            AutomationProperties.AutomationId="ItemGridView"
            AutomationProperties.Name="Grouped Items"
            Grid.RowSpan="2"
            Padding="116,137,40,46"
            ItemsSource="{Binding Source={StaticResource itemsViewSource}}"
            ItemTemplate="{StaticResource SuggesGroupedItemGridView_ItemsGenerated_Items}"
            SelectionMode="Multiple"
            IsSwipeEnabled="True"
            IsItemClickEnabled="True"
			ItemContainerStyle="{StaticResource SuggesGroupedItemGridView_ItemsGenerated_Container}" ItemClick="itemGridView_ItemClick" SelectionChanged="itemGridView_SelectionChanged" >
			<GridView.Header>
                <StackPanel Margin="0,4,14,0" Height="500">
                    <TextBlock TextWrapping="NoWrap" Text="{Binding [0].Trip.StartDate, Converter={StaticResource dateConverter}, Source={StaticResource itemsViewSource}}" Foreground="{StaticResource SuggesGroupTitleForegroundColor}" FontSize="21.333"/>
                    <Button x:Name="btnPhoto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource SuggesButtonImageContainer}" BorderThickness="0" Click="btnSelectPhoto_Click">
                    	<Image x:Name="imgTripPhoto" Source="{Binding [0].Trip.LocalPathImage, Source={StaticResource itemsViewSource}}" AutomationProperties.Name="{Binding Title}" VerticalAlignment="Top" Stretch="Fill" Margin="0,14,0,10" Width="400" Height="298"/>
                    </Button>
                    <TextBlock TextWrapping="NoWrap" Text="Budget" Foreground="{StaticResource SuggesSecondaryDescriptionForegroundColor}" FontSize="26.667"/>
                    <TextBlock TextWrapping="NoWrap" Text="{Binding [0].Trip.Cost, Converter={StaticResource valueToMoneyConverter}, Source={StaticResource itemsViewSource}}" Foreground="{StaticResource SuggesGroupTitleForegroundColor}" FontSize="32"/>
                    <TextBlock TextWrapping="NoWrap" Text="Cost" Foreground="{StaticResource SuggesSecondaryDescriptionForegroundColor}" FontSize="26.667"/>
                    <TextBlock TextWrapping="NoWrap" Text="{Binding [0].Trip.ItemsCost, Converter={StaticResource valueToMoneyConverter},  Source={StaticResource itemsViewSource}}" Foreground="{StaticResource SuggesGroupTitleForegroundColor}" FontSize="32"/>
                </StackPanel>
            </GridView.Header>
            <GridView.ItemsPanel>
                <ItemsPanelTemplate>                        
                    <VirtualizingStackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </GridView.ItemsPanel>
            <GridView.GroupStyle>
                <GroupStyle Panel="{StaticResource SuggesGroupedItemGridView_GroupsGenerated}">
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Grid Margin="1,0,0,6">
                                <Button
                                    AutomationProperties.Name="Group Title"
                                    Style="{StaticResource TextPrimaryButtonStyle}" >
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Title}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" Foreground="{StaticResource SuggesGroupTitleForegroundColor}" />
                                        <TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                    </StackPanel>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </GridView.GroupStyle>
        </GridView>
                    
        <!-- Vertical scrolling list only used when snapped -->
        <ListView
            x:Name="itemListView"
            AutomationProperties.AutomationId="ItemListView"
            AutomationProperties.Name="Items In Group"
            TabIndex="1"
            Grid.Row="1"
            Padding="10,0,0,40"
            ItemsSource="{Binding Source={StaticResource itemsViewSource}}"
            ItemTemplate="{StaticResource SuggesGroupedItemListView_ItemsGenerated_Items}"
            SelectionMode="Multiple"
            IsSwipeEnabled="True" 
			Visibility="Collapsed" 
			ItemContainerStyle="{StaticResource SuggesItemListView_ItemsGenerated_Container}" ItemClick="itemListView_ItemClick" SelectionChanged="itemListView_SelectionChanged">
			<ListView.Header>
                <StackPanel Width="300" Margin="10">
                    <TextBlock TextWrapping="NoWrap" Margin="0,0,0,0" Text="{Binding [0].Trip.StartDate, Converter={StaticResource dateConverter}, Source={StaticResource itemsViewSource}}" Foreground="{StaticResource SuggesGroupTitleForegroundColor}" FontSize="26.667"/>
                    <Image Source="{Binding [0].Trip.LocalPathImage, Source={StaticResource itemsViewSource}}" Height="220" Margin="0,8,18,20" AutomationProperties.Name="{Binding Title}" VerticalAlignment="Top" Stretch="Fill"/>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<StackPanel Grid.Column="0">
							<TextBlock TextWrapping="Wrap" Text="Budget" Foreground="{StaticResource SuggesSecondaryDescriptionForegroundColor}" FontSize="26.667"/>
							<TextBlock TextWrapping="Wrap" Text="{Binding [0].Trip.Cost, Converter={StaticResource valueToMoneyConverter}, Source={StaticResource itemsViewSource}}" Foreground="{StaticResource SuggesGroupTitleForegroundColor}" FontSize="26.667"/>
						</StackPanel>
						<StackPanel Grid.Column="1">
							<TextBlock TextWrapping="Wrap" Text="Cost" Foreground="{StaticResource SuggesSecondaryDescriptionForegroundColor}" FontSize="26.667"/>
							<TextBlock TextWrapping="Wrap" Text="{Binding [0].Trip.ItemsCost, Converter={StaticResource valueToMoneyConverter}, Source={StaticResource itemsViewSource}}" Foreground="{StaticResource SuggesGroupTitleForegroundColor}" FontSize="26.667"/>
						</StackPanel>
					</Grid>
                </StackPanel>
            </ListView.Header>
			<ListView.GroupStyle>
				<GroupStyle>
					<GroupStyle.HeaderTemplate>
						<DataTemplate>
							<Grid Margin="7,7,0,0">
								<Button
									AutomationProperties.Name="Group Title"
									Style="{StaticResource TextPrimaryButtonStyle}">
									<StackPanel Orientation="Horizontal">
										<TextBlock Text="{Binding Title}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" Foreground="{StaticResource SuggesGroupTitleForegroundColor}" />
										<TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
									</StackPanel>
								</Button>
							</Grid>
						</DataTemplate>
					</GroupStyle.HeaderTemplate>
				</GroupStyle>
			</ListView.GroupStyle>
		</ListView>
        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource SuggesBackButtonStyle}"/>
			<Button x:Name="backButtonSnapped" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource SuggesSnappedBackButtonStyle}" Visibility="Collapsed"/>
            <StackPanel Grid.Column="1" Margin="0,55,30,0" Orientation="Vertical">
            	<TextBlock x:Name="pageTitle" Text="{Binding [0].Trip.Title, Source={StaticResource itemsViewSource}}" Style="{StaticResource PageHeaderTextStyle}" IsHitTestVisible="false" Foreground="{StaticResource SuggesFlyoutBackgroundColor}" Margin="0" FontSize="48" Height="45" TextTrimming="WordEllipsis" />
            	<TextBlock x:Name="pageDescription" Text="{Binding [0].Trip.Description, Source={StaticResource itemsViewSource}}" Style="{StaticResource PageHeaderTextStyle}" IsHitTestVisible="false" Foreground="{StaticResource SuggesSecondaryDescriptionForegroundColor}" Margin="0,-15,0,0" FontSize="21.333" Height="40" TextTrimming="WordEllipsis" />
            </StackPanel>
        </Grid>

    </Grid>
</common:LayoutAwarePage>
